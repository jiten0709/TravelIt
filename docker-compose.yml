version: "3.8"

services:
  postgres:
    image: postgres:13
    container_name: travelit-postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - travelit_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./BackendTravelit
      dockerfile: Dockerfile
    container_name: travelit-backend
    restart: unless-stopped
    env_file:
      - ./BackendTravelit/.env
    ports:
      - "5004:5004"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - travelit_network

  frontend:
    build:
      context: ./FrontendTravelit
      dockerfile: Dockerfile
    container_name: travelit-frontend
    restart: unless-stopped
    env_file:
      - ./FrontendTravelit/.env
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - travelit_network

volumes:
  postgres_data:

networks:
  travelit_network:
    driver: bridge
